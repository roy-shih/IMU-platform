#!/usr/bin/env node
require("dotenv").config( );
const fs = require("fs");
const path = require("path");

const mysql = require("mysql2");

const APPS = require("../install_apps");
const { DB_HOST, DB_USER, DB_PASSWORD, DB_SCHEMA } = process.env;
var required = [];
var connectionClose = false;
// create connection
console.log( { DB_HOST, DB_USER, DB_PASSWORD, DB_SCHEMA } );
const connection = mysql.createConnection({
  host: DB_HOST,
  user: DB_USER,
  password: DB_PASSWORD,
  database: DB_SCHEMA,
});

for(let app_name in APPS){
  // read .migrate_cache
  let app_path = path.join( __dirname, "../Module", APPS[app_name]);
  let migrate_cache_path = path.resolve( app_path, ".migrate_cache" );
  if( ! fs.existsSync( migrate_cache_path ) ){
    continue;
    // throw { error: "This app don't have model.", app:app_name };
  }

  let migrate_cache = fs.readFileSync( migrate_cache_path, "utf8" );
  // query database
  let queries = migrate_cache.split("\n\n");
  for(let query of queries){
    required.push( query );
  }
  // run each query in required, then check required.length
  runQuery( required );
}


function runQuery( queries ){
  if( queries.length == 0 ){
    console.log( "All queries are done." );
    // close connection
    if( !connectionClose ){
      connectionClose = true;
      connection.end();
    }
    return;
  }

  let query = queries.pop();
  connection.query( query, ( error, results, fields ) => {
    if( error ){
      console.log( error );
    }
    return runQuery( queries );
  } );
}
